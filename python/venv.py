"""Venv issue."""

#
# 1. Что делает команда python -m venv venv?
# Создаёт виртуальное окружение Python в папке venv
#
# 1.1 Что делает каждая команда в списке ниже?
#     pip list — показывает список установленных пакетов
#     pip freeze > requirements.txt — сохраняет список пакетов в файл requirements.txt
#     pip install -r requirements.txt — устанавливает пакеты из файла requirements.txt
#
# 2. Что делает каждая команда в списке ниже?
#     conda env list — выводит список всех виртуальных окружений
#     conda create -n env_name python=3.5 — создаёт виртуальное окружение с Python 3.5
#     conda env update -n env_name -f file.yml — обновляет окружение по файлу file.yml
#     source activate env_name — активирует виртуальное окружение
#     source deactivate — деактивирует виртуальное окружение
#     conda clean -a — удаляет все пакеты
#
# 3. вставьте скрин вашего терминала, где вы активировали сначала venv, потом conda, назовите окружение "SENATOROV"
# Окружение "SENATOROV" создал до этого, просто проблемы с кондой были
# ![image.png](attachment:image.png)
#
# 4. Как установить необходимые пакеты внутрь виртуального окружения для conda/venv?
# ДЛЯ CONDA:
# Активировать виртуальное окружение `conda activate имя_окружения`
# Установить пакет `conda install имя_пакета`
#
# ДЛЯ PIP:
# venv\Scripts\activate
# pip install имя_пакета
#
# 5. Что делают эти команды?
#     pip freeze > requirements.txt - сохраняет список установленных пакетов в файл requirements.txt
#     conda env export > environment.yml - сохраняет полное описание окружения Conda в файл environment.yml
#
#
# 5.1 вставьте скрин, где будет видна папка VENV в вашем репозитории а также файлы зависимостей
# requirements.txt и environment.yml, файлы должны содержать зависимости
# ![image-2.png](attachment:image-2.png)
#
# 6. Что делают эти команды?
#     pip install -r requirements.txt - устанавливает пакеты из списка в файле requirements.txt
#     conda env create -f environment.yml - создаёт новое окружение Conda на основе файла environment.yml
#
#
# 7. Что делают эти команды?
#     pip list - показывает все установленные пакеты в текущем окружении
#     pip show - выводит детали по конкретному пакету (версия, описание, зависимости)
#     conda list - показывает все пакеты, установленные в текущем окружении Conda (включая системные)
#
#
# 8. Где по умолчанию больше пакетов venv/pip или conda? и почему дата сайнинисты используют conda?
# Больше пакетов по умолчанию — в Conda, потому что оно устанавливает Python + базовые научные пакеты (numpy, pandas и др.)
# Дата сайнинисты используют конду потому что она предоставляет лучшую совместимость сложных пакетов, а также
# Поддержку виртуальных окружений + установка разных версий Python
#
# 9. вставьте скрин где будет видно, Выбор интерпретатора Python (conda) в VS Code/cursor
# ![image-3.png](attachment:image-3.png)
#
# 10. добавьте в .gitignore папку SENATOROV
# Дописал "SENATOROV/" в .gitignore
# Но как я понял это не обязательно, потому что папка SENATOROV не находится в папке проекта,
# а хранится в системной директории Conda
#
# 11. Зачем нужно виртуально окружение?
# Виртуальное окружение нужно, чтобы изолировать зависимости и версии пакетов для каждого
# проекта — это предотвращает конфликты, обеспечивает воспроизводимость и упрощает совместную разработку
#
# 12. С этого момента надо работать в виртуальном окружении conda, ты научился(-ась) выгружать зависимости и работать с окружением?
# да
#
# 13. Удалите папку VENV, она больше не нужна, мы же не разрабы, нам нужна только conda
# сделано
#
